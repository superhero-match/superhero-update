<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="030a4278-0ec0-4df9-882a-fab9a0e09a07" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.dockerignore" beforeDir="false" afterPath="$PROJECT_DIR$/.dockerignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/$PRODUCT_WORKSPACE_FILE$" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/superhero-update.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/superhero-update.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/api/controller/controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/api/controller/controller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/api/controller/health.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/api/controller/health.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/api/controller/update.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/api/controller/update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/api/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/api/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/api/model/superhero.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/api/model/superhero.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/api/service/producer.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/api/service/producer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/api/service/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/api/service/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config.yml" beforeDir="false" afterPath="$PROJECT_DIR$/config.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/config/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/config/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/config/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/config/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/config/producer.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/config/producer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/producer/close.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/producer/close.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/producer/model/superhero.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/producer/model/superhero.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/producer/producer.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/producer/producer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/producer/update.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/producer/update.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="28IIm9rDXYwYUUSjozijK2WcBI0" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/nikolajuskarpovas/go/src/github.com/superhero-match/superhero-update",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm"
  }
}]]></component>
  <component name="RunManager" selected="Go Test.TestProducer_UpdateSuperhero in github.com/superhero-match/superhero-update/cmd/api/service">
    <configuration name="TestController_Health in github.com/superhero-match/superhero-update/cmd/api/controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="superhero-update" />
      <working_directory value="$PROJECT_DIR$/cmd/api/controller" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/superhero-match/superhero-update/cmd/api/controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestController_Health\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestController_UpdateSuperhero in github.com/superhero-match/superhero-update/cmd/api/controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="superhero-update" />
      <working_directory value="$PROJECT_DIR$/cmd/api/controller" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/superhero-match/superhero-update/cmd/api/controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestController_UpdateSuperhero\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestController_UpdateSuperheroInternalError in github.com/superhero-match/superhero-update/cmd/api/controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="superhero-update" />
      <working_directory value="$PROJECT_DIR$/cmd/api/controller" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/superhero-match/superhero-update/cmd/api/controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestController_UpdateSuperheroInternalError\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestController_UpdateSuperheroInvalidRequest in github.com/superhero-match/superhero-update/cmd/api/controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="superhero-update" />
      <working_directory value="$PROJECT_DIR$/cmd/api/controller" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/superhero-match/superhero-update/cmd/api/controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestController_UpdateSuperheroInvalidRequest\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProducer_UpdateSuperhero in github.com/superhero-match/superhero-update/cmd/api/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="superhero-update" />
      <working_directory value="$PROJECT_DIR$/cmd/api/service" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/superhero-match/superhero-update/cmd/api/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProducer_UpdateSuperhero\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestProducer_UpdateSuperhero in github.com/superhero-match/superhero-update/cmd/api/service" />
        <item itemvalue="Go Test.TestController_Health in github.com/superhero-match/superhero-update/cmd/api/controller" />
        <item itemvalue="Go Test.TestController_UpdateSuperheroInvalidRequest in github.com/superhero-match/superhero-update/cmd/api/controller" />
        <item itemvalue="Go Test.TestController_UpdateSuperhero in github.com/superhero-match/superhero-update/cmd/api/controller" />
        <item itemvalue="Go Test.TestController_UpdateSuperheroInternalError in github.com/superhero-match/superhero-update/cmd/api/controller" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/superhero_update$TestController_Health_in_github_com_superhero_match_superhero_update_cmd_api_controller.out" NAME="TestController_Health in github.com/superhero-match/superhero-update/cmd/api/controller Coverage Results" MODIFIED="1650907992693" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/superhero_update$TestProducer_UpdateSuperhero_in_github_com_superhero_match_superhero_update_cmd_api_service.out" NAME="TestProducer_UpdateSuperhero in github.com/superhero-match/superhero-update/cmd/api/service Coverage Results" MODIFIED="1650905311981" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/superhero_update$TestProducer_UpdateSuperhero_in_github_com_superhero_match_superhero_update_internal_producer.out" NAME="TestProducer_UpdateSuperhero in github.com/superhero-match/superhero-update/internal/producer Coverage Results" MODIFIED="1650904372032" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/superhero_update$TestController_UpdateSuperheroInvalidRequest_in_github_com_superhero_match_superhero_update_cmd_api_controller.out" NAME="TestController_UpdateSuperheroInvalidRequest in github.com/superhero-match/superhero-update/cmd/api/controller Coverage Results" MODIFIED="1650907750288" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/superhero_update$TestNewConfig_in_github_com_superhero_match_superhero_update_internal_config.out" NAME="TestNewConfig in github.com/superhero-match/superhero-update/internal/config Coverage Results" MODIFIED="1650904666859" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/superhero_update$TestController_UpdateSuperhero_in_github_com_superhero_match_superhero_update_cmd_api_controller.out" NAME="TestController_UpdateSuperhero in github.com/superhero-match/superhero-update/cmd/api/controller Coverage Results" MODIFIED="1650907449317" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>